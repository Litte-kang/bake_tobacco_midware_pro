/*
Description			: use 'child_process'
Default value		: /
The scope of value	: /
First used			: /
*/
var spawn = require('child_process').spawn;

/*
Description			: use 'fs'
Default value		: /
The scope of value	: /
First used			: /
*/
var fs = require('fs');

/*
Description			: define a stdio mode object.
Default value		: /
The scope of value	: /
First used			: /
*/
var g_StdioMode = new Array('inherit','ignore');

/*
Description			: bash shell directory
Default value		: /
The scope of value	:
First used			:
*/
var BASE_PATH = './c_processes/';

/***********************************************************************
**Function Name	: RunCProcess
**Description	: run a c process.
**Parameters	: ProcessName - in
				: IsRestart - in(0 - do not restart c process, 1 - if the c process is killed, we will restart the process)
				: StartSum - the number of restarting(-1 - unlimit).
				: StdioMode - stdio mode(0 - display output information from c process, 1 - no)
**Return		: none.
***********************************************************************/
function RunCProcess(ProcessName, IsRestart, StartSum, StdioMode)
{	
	var ls = spawn('ls', [(BASE_PATH + ProcessName + '/' + 'update_failed')]);	//-- check c process status updated --//
		
	var chmod = spawn('chmod',[777, (BASE_PATH + ProcessName + '/' + ProcessName)]);
	
	chmod.once('close', function(err){

		if (err)
		{
			console.log("RunCProcess(chmod):",err.errno);
		}
		else
		{
			var c_process = spawn((BASE_PATH + ProcessName + '/' + ProcessName), [], {stdio:g_StdioMode[StdioMode]});
			
			c_process.once('close', function(err){
		
				if (err)
				{
					console.log("RunCProcess(c_process):",err.errno);
				}
				else
				{
					if (1 === IsRestart)
					{	 	
						if(0 < StartSum)
						{
							StartSum--;
							console.log("Restart", ProcessName);
							RunCProcess(ProcessName, IsRestart, StartSum, StdioMode);

						}
						else if (0 === StartSum)
						{
							console.log(ProcessName + " stop running!");
						}
						else
						{
							console.log("Restart", ProcessName);
							RunCProcess(ProcessName, IsRestart, StartSum, StdioMode);				
						}			

				   }
				   else
				   {
				   		console.log(ProcessName + " stop running!");
				   }
				   
				} //--- end of if (err)) ---//
			   
			}); //--- end of c_process.on('close', function(err) ---//
	
		} //--- end of if (err) ---//
	
	}); //--- end of chmod.on('close', function(err) ---//			

}

exports.RunCProcess = RunCProcess;





